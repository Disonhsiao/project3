Data2
Data2$Grade[which(Data2$Grade[which(is.na(Data$Grade) == FALSE)] + 10 > 100)]
#2e #Data2為更新後的資料
Data2 <- Data
#2e1
Data2$Grade[which(is.na(Data2$Grade))] = 0
#2e2
Data2$Grade[which(is.na(Data$Grade) == FALSE)] = Data2$Grade[which(is.na(Data$Grade) == FALSE)] + 10
which(Data2$Grade[which(is.na(Data$Grade) == FALSE)] > 100)
which(is.na(Data$Grade) == FALSE)
Data2$Grade[which(is.na(Data$Grade) == FALSE)]
Data2$Grade[which(is.na(Data$Grade) == FALSE)] > 100)
Data2$Grade[which(is.na(Data$Grade) == FALSE)] > 100
DATA2
Data2$Grade[which(Data2$Grade > 10)]
Data2$Grade[which(Data2$Grade >= 10)]
(Data2$Grade[which(Data2$Grade >= 10)])[which(Data2$Grade[which(is.na(Data$Grade) == FALSE)] > 100)] <- 100
(Data2$Grade[which(Data2$Grade >= 10)])[which(Data2$Grade[which(is.na(Data$Grade) == FALSE)] > 100)] = 100
(Data2$Grade[which(Data2$Grade >= 10)])[which(Data2$Grade[which(is.na(Data$Grade) == FALSE)] > 100)] = 100
(Data2$Grade[which(Data2$Grade >= 10)])[which(Data2$Grade[which(is.na(Data$Grade) == FALSE)] > 100)] = 100
Data2$Grade[which(Data2$Grade > 100)] = 100
Data2
#2d Data2為更新後的資料
Data2 <- Data
Data2$Grade[which(is.na(Data2$Grade))] = 0
mean(Data2$Grade)
sd(Data2$Grade)
remove(Data2)
#2a
nrow(Data)
sum(Data$Gender == "M")
sum(Data$Gender == "F")
#2b
sort(Data$Grade[which(Data$Gender == "M")], decreasing = TRUE)[1]
sort(Data$Grade[which(Data$Gender == "F")], decreasing = FALSE)[1]
#2c1
sum(Data$Grade, na.rm = TRUE) / (nrow(Data) - sum(is.na(Data$Grade)))
sd(Data$Grade, na.rm = TRUE)
mean(Data$Grade, na.rm = true)
mean(Data$Grade, na.rm = TRUE)
#2c2
sum(Data$Grade[which(Data$Gender == "M")], na.rm = TRUE) / (sum(Data$Gender == "M") - sum(is.na(Data$Grade[Data$Gender=="M"])))
sum(Data$Grade[which(Data$Gender == "F")], na.rm = TRUE) / (sum(Data$Gender == "F") - sum(is.na(Data$Grade[Data$Gender=="F"])))
#2d Data2為更新後的資料
Data2 <- Data
Data2$Grade[which(is.na(Data2$Grade))] = 0
mean(Data2$Grade)
sd(Data2$Grade)
#2e
#2e1
Data2$Grade[which(is.na(Data2$Grade))] = 0
#2e2
Data2$Grade[which(is.na(Data$Grade) == FALSE)] = Data2$Grade[which(is.na(Data$Grade) == FALSE)] + 10
Data2$Grade[which(Data2$Grade > 100)] = 100
Data2
#2a
nrow(Data)
sum(Data$Gender == "M")
sum(Data$Gender == "F")
cbind(Ans$S1 == "B", Ans$S2 == "A")
rowSums(cbind(Ans$S1 == "B", Ans$S2 == "A"))
rowSums(cbind(Ans$S1[Ans$Class=="B"] =="B", Ans$S2[Ans$Class=="B"] =="A",Ans$S3[Ans$Class=="B"] =="C",Ans$S4[Ans$Class=="B"] =="D", Ans$S5[Ans$Class=="B"] =="B", Ans$Q1[Ans$Class=="B"] =="Lemon", Ans$Q2[Ans$Class=="B"] =="Apple", Ans$Q3[Ans$Class=="B"] =="Grape")) ==3
cbind(Ans$S1[Ans$Class=="B"] =="B", Ans$S2[Ans$Class=="B"] =="A",Ans$S3[Ans$Class=="B"] =="C",Ans$S4[Ans$Class=="B"] =="D", Ans$S5[Ans$Class=="B"] =="B", Ans$Q1[Ans$Class=="B"] =="Lemon", Ans$Q2[Ans$Class=="B"] =="Apple", Ans$Q3[Ans$Class=="B"] =="Grape")
load("D:/DeskTopThings/大學資料/四下/巨量資料分析/Week6_20210331/.RData")
View(Transcript)
View(Transcript)
class(Transcript)
Transcript$Class == "B"
Transcript$CourseA[Transcript$Class == "B" != NA]
Transcript$CourseA[Transcript$Class == "B"] != NA
sum(Transcript$CourseA[Transcript$Class == "B"], na.rm = TRUE)
Transcript$CourseA[Transcript$Class == "B"]>=0
Transcript$CourseA[Transcript$Class == "B"]
sum(Transcript$CourseA[Transcript$Class == "B"]>=0, na.rm = TRUE)
sum(Transcript$CourseB[Transcript$Class == "A"]>=0, na.rm = TRUE)
sum(Transcript$CourseB[Transcript$Class=="A"]>=0, na.rm = TRUE)
mean(Transcript$CourseB[Transcript$Class=="A"], na.rm = TRUE)
round(mean(Transcript$CourseB[Transcript$Class=="A"], na.rm = TRUE), 2)
Transcript[Transcript$Class=="A",3:7]
#1c
colMeans( Transcript[Transcript$Class=="A",3:7], na.rm = TRUE)
#1c
round(colMeans( Transcript[Transcript$Class=="A",3:7], na.rm = TRUE), 2)
#1d
scoreABC <- Transcript[,3:7] * 3
scoreABC
scoreD <- Transcript[,8] * 2
scoreE <- Transcript[,9] * 1
class(Transcript[,8])
Transcript[8]
Transcript[,8]
scoreD <- Transcript$CourseD * 2
scoreE <- Transcript$CourseE * 1
#1d
scoreABC <- Transcript[,3:7] * 3
class(scoreABC)
class(scoreD)
score <- data.frame(scoreABC, scoreD, scoreE)
score
#1d
scoreABC <- Transcript[,3:5] * 3
scoreD <- Transcript[,6] * 2
scoreE <- Transcript[,7] * 1
score <- data.frame(scoreABC, scoreD, scoreE)
score
scoreABC == NA
is.na(scoreABC)
rowSums( is.na(scoreABC))
rowSums(score, na.rm = TRUE) / (3*3+1*2+1*1 - (rowSums(is.na(scoreABC))*3 + rowsum(is.na(scoreD))*2 + rowsum(is.na(scoreE))*1))
scoreD
rowSums(score, na.rm = TRUE) / (3*3+1*2+1*1 - (rowSums(is.na(scoreABC))*3 + sum(is.na(scoreD))*2 + sum(is.na(scoreE))*1))
rowSums(score, na.rm = TRUE)
rowSums(score, na.rm = TRUE) / (rep(3*3+1*2+1*1,100) - (rowSums(is.na(scoreABC))*3 + sum(is.na(scoreD))*2 + sum(is.na(scoreE))*1))
rep(3*3+1*2+1*1,100)
rowSums(is.na(scoreABC))*3
sum(is.na(scoreD))*2
is.na(scoreD)
as.numeric( is.na(scoreD))
rowSums(score, na.rm = TRUE) / (rep(3*3+1*2+1*1,100) - (rowSums(is.na(scoreABC))*3 + as.numeric(is.na(scoreD))*2 + as.numeric(is.na(scoreE))*1))
round(rowSums(score, na.rm = TRUE) / (rep(3*3+1*2+1*1,100) - (rowSums(is.na(scoreABC))*3 + as.numeric(is.na(scoreD))*2 + as.numeric(is.na(scoreE))*1)), 0)
semester <- round(rowSums(score, na.rm = TRUE) / (rep(3*3+1*2+1*1,100) - (rowSums(is.na(scoreABC))*3 + as.numeric(is.na(scoreD))*2 + as.numeric(is.na(scoreE))*1)), 0)
rank(semester)
order(semester)
semester
semester[order(semester)]
rank(semester[order(semester)])
load("D:/DeskTopThings/大學資料/四下/巨量資料分析/Week6_20210331/.RData")
rand(semester)
rank(semester)
source('D:/DeskTopThings/大學資料/四下/巨量資料分析/Week9_期中考前總複習/Week_06.R')
rank(semester)
semester <- round(rowSums(score, na.rm = TRUE) / (rep(3*3+1*2+1*1,100) - (rowSums(is.na(scoreABC))*3 + as.numeric(is.na(scoreD))*2 + as.numeric(is.na(scoreE))*1)), 0)
source('D:/DeskTopThings/大學資料/四下/巨量資料分析/Week9_期中考前總複習/Week_06.R')
source('D:/DeskTopThings/大學資料/四下/巨量資料分析/Week9_期中考前總複習/Week_06.R')
source('D:/DeskTopThings/大學資料/四下/巨量資料分析/Week9_期中考前總複習/Week_06.R')
semester <- round(rowSums(score, na.rm = TRUE) / (rep(3*3+1*2+1*1,100) - (rowSums(is.na(scoreABC))*3 + as.numeric(is.na(scoreD))*2 + as.numeric(is.na(scoreE))*1)), 0)
rank(semester)
rank(semester, ties.method = min)
rank(semester, ties.method = "min")
rank(1/semester, ties.method = "min")
rank(1/semester, ties.method = "min") <= 5
semester[rank(1/semester, ties.method = "min") <= 5]
order(rank(1/semester, ties.method = "min") <= 5)
order(rank(1/semester, ties.method = "min"))
rank(1/semester, ties.method = "min")
order(rank(1/semester, ties.method = "min"))
Transcript$Sid[order(rank(1/semester, ties.method = "min"))]
(Transcript$Sid[order(rank(1/semester, ties.method = "min"))])[length(rank(1/semester, ties.method = "min"))<=5]
(Transcript$Sid[order(rank(1/semester, ties.method = "min"))])[as.numeric(1/semester, ties.method = "min"))<=5]
(Transcript$Sid[order(rank(1/semester, ties.method = "min"))])[as.numeric(rank(1/semester, ties.method = "min")<=5)]
as.numeric(rank(1/semester, ties.method = "min")<=5)
sum(rank(1/semester, ties.method = "min")<=5)
(Transcript$Sid[order(rank(1/semester, ties.method = "min"))])[sum(rank(1/semester, ties.method = "min")<=5)]
(Transcript$Sid[order(rank(1/semester, ties.method = "min"))])[1:sum(rank(1/semester, ties.method = "min")<=5)]
as.vector((Transcript$Sid[order(rank(1/semester, ties.method = "min"))])[1:sum(rank(1/semester, ties.method = "min")<=5)])
load("D:/DeskTopThings/大學資料/四下/巨量資料分析/Week7_20210407/1100407.rdata")
View(Polls)
View(Polls)
View(Poker)
View(Poker)
View(Polls)
load("D:/DeskTopThings/大學資料/四下/巨量資料分析/Week6_20210331/.RData")
View(Info)
View(Info)
dim(infoRDS())
dim(info()
dim(info)
dim(info)
dim(Info)
View(Transcript)
View(Transcript)
dim(Transcript)
View(Transcript)
View(Transcript)
class(Transcript$Sid)
class(Transcript["sid"])
class(Transcript["Sid"])
class(Transcript[["Sid"])
class(Transcript[["Sid"]])
View(Transcript)
View(Transcript)
class(Transcript[,2])
Transcript[,2]
class(Transcript[,2:3])
class(Transcript[1,])
Transcript[,2, drop = FALSE]
class(Transcript[,2, drop = FALSE])
class(Transcript[,2)
class(Transcript[,2]
)
getwd()
#桌電
setwd("D:/DeskTopThings/大學資料/四下/巨量資料分析/期末專題")
getwd()
filename <- "467060-2020"
filename <- paste("./", filename, ".csv", sep = "")
#dir()
#, fileEncoding = "big5"
read.table(filename, header = TRUE, sep = ",")
#dir()
#, fileEncoding = "big5"
read.table(filename, header = TRUE, sep = ",", fileEncoding = "utf-8")
#dir()
#, fileEncoding = "big5"
read.table(filename, header = TRUE, fileEncoding = "utf-8", sep = ",")
#dir()
#, fileEncoding = "big5"
read.table(filename, header = TRUE, encoding = "UTF-8", sep = ",")
#dir()
#, fileEncoding = "big5"
tt <- read.table(filename, header = TRUE, encoding = "UTF-8", sep = ",")
View(tt)
class(tt)
tt$A型蒸發量.mm.
tt$A型蒸發量.mm.
class(tt$A型蒸發量.mm.)
paste('Apple', 'Cherry', 'Orange')
paste('std', 1:5, sep = '_')
class(paste('std', 1:5, sep = '_'))
paste('std', 1:5, sep = '_')[1]
paste('std', 1:5, sep = '_')[2]
class(paste('std', 1:5, sep = '_'))
class(paste('std', 1:5, sep = '_')[2])
class(as.vector(paste('std', 1:5, sep = '_')))
x <- c(3, 5, 8) ; cat('Apple', 10.5, x, 'Cherry', sep = ' && ')
class(x)
#宜蘭-宜蘭測站
filename <- paste("467060-20", 11:20, sep = '')
filename
#宜蘭-宜蘭測站
filename <- paste("./", "467060-20", 11:20, ".csv", sep = '')
read.table(filename, header = TRUE, encoding = "UTF-8", sep = ",")[1]
read.table(filename, header = TRUE, encoding = "UTF-8", sep = ",")
#dir()
#, fileEncoding = "big5"
tt <- read.table(filename, header = TRUE, encoding = "UTF-8", sep = ",")
#dir()
#, fileEncoding = "big5"
tt <- read.table(filename[1:10], header = TRUE, encoding = "UTF-8", sep = ",")
#dir()
#, fileEncoding = "big5"
tt <- read.table(filename[1], header = TRUE, encoding = "UTF-8", sep = ",")
#宜蘭-宜蘭測站
filename <- paste("./", "467080-20", 11:20, ".csv", sep = '')
#dir()
#, fileEncoding = "big5"
tt <- read.table(filename[1], header = TRUE, encoding = "UTF-8", sep = ",")
View(tt)
#dir()
#, fileEncoding = "big5"
tt <- read.table(filename[2], header = TRUE, encoding = "UTF-8", sep = ",")
filename <- paste("./", "467080-20", i, ".csv", sep = '')
#dir()
#, fileEncoding = "big5"
for(i in c(11:20))
{
filename <- paste("./", "467080-20", i, ".csv", sep = '')
}
paste(1:5)
paste(1:5) [1]
yilan_posname <- c("Yilan", "Taiping", "Wujie", "Dong-ao", "Nanao", "Yuanyang")
paste("Yilan_", i-10, "_", yilan_posname[1], sep = "")
paste("Yilan_", 11-10, "_", yilan_posname[1], sep = "")
paste("Yilan_", 12-10, "_", yilan_posname[2], sep = "")
paste("DF_Yilan_", i-10, "_", yilan_posname[i], sep = "")
dfName <- paste("DF_Yilan_", i-10, "_", yilan_posname[i], sep = "")
dfName <- read.table(filename[1], header = TRUE, encoding = "UTF-8", sep = ",")
dfName <- paste("DF_Yilan_", i-10, "_", yilan_posname[i], sep = "")
cat(dfName)
class(cat(dfName))
paste(dfName)
class(paste(dfName))
paste(dfName) <- read.table(filename[1], header = TRUE, encoding = "UTF-8", sep = ",")
paste("DF_Yilan_", i-10, "_", yilan_posname[i], sep = "") <- 0
paste("DF_Yilan_", i-10, "_", yilan_posname[i], sep = "") <- 0
paste("DF_Yilan_", i-10, "_", yilan_posname[i], sep = "")[1] <- 0
assign("zzz", 0)
remove(zzz)
assign(dfName[1], 0)
assign(dfName, 0)
assign(dfName, 1)
assign(dfName, read.table(filename[i], header = TRUE, encoding = "UTF-8", sep = ","))
df <- read.table(filename[i], header = TRUE, encoding = "UTF-8", sep = ",")
assign(dfName, read.table(filename, header = TRUE, encoding = "UTF-8", sep = ","))
#dir()
#, fileEncoding = "big5"
for(i in c(11:20))
{
filename <- paste("./", "467080-20", i, ".csv", sep = '')
dfName <- paste("DF_Yilan_", i-10, "_", yilan_posname[i], sep = "")
assign(dfName, read.table(filename[i], header = TRUE, encoding = "UTF-8", sep = ","))
}
#dir()
#, fileEncoding = "big5"
for(i in c(11:20))
{
filename <- paste("./", "467080-20", i, ".csv", sep = '')
dfName <- paste("DF_Yilan_", i-10, "_", yilan_posname[i], sep = "")
assign(dfName, read.table(filename, header = TRUE, encoding = "UTF-8", sep = ","))
}
sprintf('We study %s and %s', 'AI', 'Big Data')
class(sprintf('We study %s and %s', 'AI', 'Big Data'))
#宜蘭-宜蘭測站
#filename <- paste("./", "467080-20", 11:20, ".csv", sep = '')
yilan_posname <- c("Yilan", "Taiping", "Wujie", "Dong-ao", "Nanao", "Yuanyang")
for(i in c(1:6)) #有6個測站
{
dfName <- sprintf("DF_Yilan_%02s_%02s_20", i, yilan_posname[i])
for(y in c(11:20)) #每測站10筆資料(2011~2020)
{
filename <- paste("./", "467080-20", y, ".csv", sep = '')
#dfName <- paste("DF_Yilan_", 1, "_", yilan_posname[1], sep = "")
dfName <- sprintf("%s%02s", dfName, y)
assign(dfName, read.table(filename, header = TRUE, encoding = "UTF-8", sep = ","))
}
}
for(i in c(1:6)) #有6個測站
{
dfName <- sprintf("DF_Yilan_%02s_%02s_20", i, yilan_posname[i])
for(y in c(11:20)) #每測站10筆資料(2011~2020)
{
filename <- paste("./", "467080-20", y, ".csv", sep = '')
#dfName <- paste("DF_Yilan_", 1, "_", yilan_posname[1], sep = "")
dfName <- sprintf("%s%02s", dfName, y)
assign(dfName, read.table(filename, header = TRUE, encoding = "UTF-8", sep = ","))
}
}
for(i in c(1:1)) #有6個測站
{
dfName <- sprintf("DF_Yilan_%02s_%02s_20", i, yilan_posname[i])
for(y in c(11:20)) #每測站10筆資料(2011~2020)
{
filename <- paste("./", "467080-20", y, ".csv", sep = '')
#dfName <- paste("DF_Yilan_", 1, "_", yilan_posname[1], sep = "")
dfName <- sprintf("%s%02s", dfName, y)
assign(dfName, read.table(filename, header = TRUE, encoding = "UTF-8", sep = ","))
}
}
#宜蘭-宜蘭測站
#filename <- paste("./", "467080-20", 11:20, ".csv", sep = '')
yilan_posname <- c("Yilan", "Taiping", "Wujie", "Dong-ao", "Nanao", "Yuanyang")
for(i in c(1:1)) #有6個測站
{
dfName <- sprintf("DF_Yilan_%02s_%02s_20", i, yilan_posname[i])
for(y in c(11:20)) #每測站10筆資料(2011~2020)
{
filename <- paste("./", "467080-20", y, ".csv", sep = '')
#dfName <- paste("DF_Yilan_", 1, "_", yilan_posname[1], sep = "")
dfName <- sprintf("%s%02s", dfName, y)
assign(dfName, read.table(filename, header = TRUE, encoding = "UTF-8", sep = ","))
}
}
View(`DF_Yilan_ 1_Yilan_2011121314151617`)
#宜蘭-宜蘭測站
#filename <- paste("./", "467080-20", 11:20, ".csv", sep = '')
yilan_posname <- c("Yilan", "Taiping", "Wujie", "Dong-ao", "Nanao", "Yuanyang")
for(i in c(1:1)) #有6個測站
{
for(y in c(11:20)) #每測站10筆資料(2011~2020)
{
filename <- paste("./", "467080-20", y, ".csv", sep = '')
#dfName <- paste("DF_Yilan_", 1, "_", yilan_posname[1], sep = "")
dfName <- sprintf("DF_Yilan_%02s_%02s_20%02s", i, yilan_posname[i], y)
assign(dfName, read.table(filename, header = TRUE, encoding = "UTF-8", sep = ","))
}
}
for(i in c(1:1)) #有6個測站
{
for(y in c(11:20)) #每測站10筆資料(2011~2020)
{
filename <- paste("./", "467080-20", y, ".csv", sep = '')
#dfName <- paste("DF_Yilan_", 1, "_", yilan_posname[1], sep = "")
dfName <- sprintf("DF_Yilan_%02d_%02s_20%02d", i, yilan_posname[i], y)
assign(dfName, read.table(filename, header = TRUE, encoding = "UTF-8", sep = ","))
}
}
#宜蘭-宜蘭測站
#filename <- paste("./", "467080-20", 11:20, ".csv", sep = '')
yilan_posname <- c("Yilan", "Taiping", "Wujie", "Dong-ao", "Nanao", "Yuanyang")
for(i in c(1:1)) #有6個測站
{
for(y in c(11:20)) #每測站10筆資料(2011~2020)
{
filename <- paste("./", "467080-20", y, ".csv", sep = '')
#dfName <- paste("DF_Yilan_", 1, "_", yilan_posname[1], sep = "")
dfName <- sprintf("DF_Yilan_%02d_%02s_20%02d", i, yilan_posname[i], y)
assign(dfName, read.table(filename, header = TRUE, encoding = "UTF-8", sep = ","))
}
}
load("D:/DeskTopThings/大學資料/四下/巨量資料分析/期末專題/Project_20210606_variables.R.RData")
load("D:/DeskTopThings/大學資料/四下/巨量資料分析/期末專題/Project_20210606_variables.R.RData")
# Rose_Tainan_7 <- Rose("Houbi")
# Rose_Tainan_8 <- Rose("Baihe")
# Rose_Tainan <- list("Yujing" = Rose_Tainan_1,
#                     "Guanshan" = Rose_Tainan_2,
#                     "Tainan" = Rose_Tainan_3,
#                     "Beimen" = Rose_Tainan_4,
#                     "Madou" = Rose_Tainan_5,
#                     "Beiliao" = Rose_Tainan_6,
#                     "Houbi" = Rose_Tainan_7,
#                     "Baihe" = Rose_Tainan_8)
Rose_Tainan <- Rose("Tainan")
invisible(lapply(c("plyr", "lubridate", "magrittr", "rvest", "ggrepel", "ggplot2"), library, character.only = TRUE))
#彰化全站
Rose_Tainan <- Rose("Tainan")
#畫風向玫瑰圖
Rose <- function(posName)
{
url_start <- c("Yilan" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=467080&stname=%25E5%25AE%259C%25E8%2598%25AD&datepicker=",
"Yujing" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0O930&stname=%25E7%258E%2589%25E4%25BA%2595&datepicker=",
"Guanshan" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C1O880&stname=%25E9%2597%259C%25E5%25B1%25B1&datepicker=",
"Tainan" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=467410&stname=%25E8%2587%25BA%25E5%258D%2597&datepicker=",
"Beimen" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0X290&stname=%25E5%258C%2597%25E9%2596%2580&datepicker=",
"Madou" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0X120&stname=%25E9%25BA%25BB%25E8%25B1%2586&datepicker=",
"Beiliao" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0O830&stname=%25E5%258C%2597%25E5%25AF%25AE&datepicker=",
"Houbi" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0X260&stname=%25E5%25BE%258C%25E5%25A3%2581&datepicker=",
"Baihe" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0X210&stname=%25E7%2599%25BD%25E6%25B2%25B3&datepicker=",
"Yuanlin" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G650&stname=%25E5%2593%25A1%25E6%259E%2597&datepicker=",
"Xiushui" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G780&stname=%25E7%25A7%2580%25E6%25B0%25B4&datepicker=",
"Erlin" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G730&stname=%25E4%25BA%258C%25E6%259E%2597&datepicker=",
"Beidou" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G840&stname=%25E5%258C%2597%25E6%2596%2597&datepicker=",
"Ershui" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G880&stname=%25E4%25BA%258C%25E6%25B0%25B4&datepicker=",
"Lukang" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G640&stname=%25E9%25B9%25BF%25E6%25B8%25AF&datepicker=",
"Penghu"= "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=467350&stname=%25E6%25BE%258E%25E6%25B9%2596&datepicker="
)
#台南/彰化一次取全測站數值
if(posName == "Tainan")
url <- url_start[2:9]
else if(posName == "Changhua")
url <- url_start[10:15]
else
url <- url_start[posName]
DF <- adply(url, .margins = 1, .fun = "Rose1", .id = NULL)
DF$WindSpd_N <- cut(DF$WindSpd,
breaks = c(0, 2.1, 4.1,  6.1, Inf),
labels = c("0~2", "2.1~4", "4.1~6", ">6.1"),
right = F)
DF$WindDir_N <- cut(DF$WindDir,
breaks = c(0, 11.26, 33.76, 56.26, 78.76, 101.26, 127.76, 146.26, 168.76, 191.26, 213.76, 236.26, 258.76, 281.26, 303.76, 326.26, 348.75, 360),
labels = c("N","NNE","NE","ENE","E","ESE","ES","SSE","S","SWS","SW","WSW","W","WNW","NW","NNW","N"),
include.lowest = TRUE)
#季節分群轉為list
lis <- dlply(DF, .variables = "Season", .fun = "Rose5")
return (lis)
}
#台南全站
Rose_Tainan <- Rose("Tainan")
#彰化全站
Rose_Changhua <- Rose("Changhua")
#畫風向玫瑰圖
Rose <- function(posName)
{
url_start <- c("Yilan" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=467080&stname=%25E5%25AE%259C%25E8%2598%25AD&datepicker=",
"Yujing" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0O930&stname=%25E7%258E%2589%25E4%25BA%2595&datepicker=",
"Guanshan" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C1O880&stname=%25E9%2597%259C%25E5%25B1%25B1&datepicker=",
"Tainan" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=467410&stname=%25E8%2587%25BA%25E5%258D%2597&datepicker=",
"Beimen" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0X290&stname=%25E5%258C%2597%25E9%2596%2580&datepicker=",
"Madou" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0X120&stname=%25E9%25BA%25BB%25E8%25B1%2586&datepicker=",
"Beiliao" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0O830&stname=%25E5%258C%2597%25E5%25AF%25AE&datepicker=",
"Houbi" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0X260&stname=%25E5%25BE%258C%25E5%25A3%2581&datepicker=",
"Baihe" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0X210&stname=%25E7%2599%25BD%25E6%25B2%25B3&datepicker=",
"Yuanlin" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G650&stname=%25E5%2593%25A1%25E6%259E%2597&datepicker=",
"Xiushui" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G780&stname=%25E7%25A7%2580%25E6%25B0%25B4&datepicker=",
"Erlin" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G730&stname=%25E4%25BA%258C%25E6%259E%2597&datepicker=",
"Beidou" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G840&stname=%25E5%258C%2597%25E6%2596%2597&datepicker=",
"Ershui" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G880&stname=%25E4%25BA%258C%25E6%25B0%25B4&datepicker=",
"Lukang" = "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=C0G640&stname=%25E9%25B9%25BF%25E6%25B8%25AF&datepicker=",
"Penghu"= "https://e-service.cwb.gov.tw/HistoryDataQuery/MonthDataController.do?command=viewMain&station=467350&stname=%25E6%25BE%258E%25E6%25B9%2596&datepicker="
)
#台南/彰化一次取全測站數值
if(posName == "TainanALL")
url <- url_start[2:9]
else if(posName == "ChanghuaALL")
url <- url_start[10:15]
else
url <- url_start[posName]
DF <- adply(url, .margins = 1, .fun = "Rose1", .id = NULL)
DF$WindSpd_N <- cut(DF$WindSpd,
breaks = c(0, 2.1, 4.1,  6.1, Inf),
labels = c("0~2", "2.1~4", "4.1~6", ">6.1"),
right = F)
DF$WindDir_N <- cut(DF$WindDir,
breaks = c(0, 11.26, 33.76, 56.26, 78.76, 101.26, 127.76, 146.26, 168.76, 191.26, 213.76, 236.26, 258.76, 281.26, 303.76, 326.26, 348.75, 360),
labels = c("N","NNE","NE","ENE","E","ESE","ES","SSE","S","SWS","SW","WSW","W","WNW","NW","NNW","N"),
include.lowest = TRUE)
#季節分群轉為list
lis <- dlply(DF, .variables = "Season", .fun = "Rose5")
return (lis)
}
#台南全站
Rose_Tainan <- Rose("TainanALL")
View(Rose_Tainan)
View(Rose_Changhua)
Rose_paint(Rose_Tainan$Winter, "Tainan")
# Rose_paint(Rose_Tainan$Beiliao$Summer, "Tainan_Beiliao")
# Rose_paint(Rose_Tainan$Beiliao$Auturm, "Tainan_Beiliao")
# Rose_paint(Rose_Tainan$Houbi$Winter, "Tainan_Houbi")
# Rose_paint(Rose_Tainan$Houbi$Spring, "Tainan_Houbi")
# Rose_paint(Rose_Tainan$Houbi$Summer, "Tainan_Houbi")
# Rose_paint(Rose_Tainan$Houbi$Auturm, "Tainan_Houbi")
# Rose_paint(Rose_Tainan$Baihe$Winter, "Tainan_Baihe")
# Rose_paint(Rose_Tainan$Baihe$Spring, "Tainan_Baihe")
# Rose_paint(Rose_Tainan$Baihe$Summer, "Tainan_Baihe")
# Rose_paint(Rose_Tainan$Baihe$Auturm, "Tainan_Baihe")
Rose_paint(Rose_Tainan$Winter, "Tainan")
Rose_paint(Rose_Tainan$Spring, "Tainan")
Rose_paint(Rose_Tainan$Summer, "Tainan")
Rose_paint(Rose_Tainan$Auturm, "Tainan")
save.image("D:/DeskTopThings/大學資料/四下/巨量資料分析/期末專題/Project_20210608_variables.RData")
source('D:/DeskTopThings/大學資料/四下/巨量資料分析/期末專題/Project_20210609.R', encoding = 'UTF-8')
source('D:/DeskTopThings/大學資料/四下/巨量資料分析/期末專題/Project_20210609.R', encoding = 'UTF-8')
source('D:/DeskTopThings/大學資料/四下/巨量資料分析/期末專題/Project_20210609.R', encoding = 'UTF-8')
